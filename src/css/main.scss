// TODO:
@import "webfonts";

$grey: hsl(0,0%,28%);
$blue: hsl(188,89%,44%);

$tablet: 590px;
$desktop: 900px;

$gutter-width: 1.25rem;
$trailing-margin-height: 1.2rem;

@mixin font-size($percent, $min-font-size, $max-font-size) {
    // Min
    font-size: $min-font-size;

    @include breakpoint($min-font-size/$percent * 100) {
        font-size: #{$percent}vw;
    }

    @include breakpoint($max-font-size/$percent * 100) {
        font-size: $max-font-size;
    }
}

@mixin grid($unit) {
    .l-#{$unit}-Grid {
        display: flex;
        flex-wrap: wrap;
        // Account for first gutter
        margin-left: -$gutter-width;
    }

    .l-#{$unit}-Grid--1of2 > .l-#{$unit}-GridCell {
        flex-basis: 50%;
        margin-bottom: $gutter-width;

        &:last-child,
        &:nth-last-child(2) {
            margin-bottom: 0;
        }
    }

    .l-#{$unit}-Grid--flexCells > .l-#{$unit}-GridCell {
        display: flex;

        & > * {
            flex: 1;
        }
    }

    .l-#{$unit}-GridCell {
        flex: 1;
        padding-left: $gutter-width;
        // Unset
        margin-bottom: 0;
    }

    .l-#{$unit}-2of3 {
        width: 66.666%;
        flex: none;
    }
}

// When collapsed, we apply trailing margins to the cells (except the last).
.l-GridCell {
    margin-bottom: $trailing-margin-height;

    &:last-child {
        margin-bottom: 0;
    }
}

.l-Grid--collapse {
    & > .l-GridCell {
        margin-bottom: 0;
    }
}

@mixin breakpoint($size) {
    @if (true) {
    // @if (false) {
        // FIXME: Arbitrary number
        @media (min-width: $size) {
            @content;
        }
    }
}

// .content {
//     background: hsl(0,0%, 85%);

//     .content {
//         background: hsl(0,0%, 75%);

//         .content {
//             background: hsl(0,0%, 65%);
//         }
//     }
// }

@mixin inset() {
    @include breakpoint($desktop) {
        min-width: $desktop;
        max-width: 1050px;
        margin-left: auto;
        margin-right: auto;
    }
}

// TODO: Do we want to do this for everything?
* {
    box-sizing: border-box;
}

.hidden {
    display: none
}

.inset {
    @include inset();
}

body {
    // Unset
    margin: 0;
    font-family: "EgyptianText", serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    color: hsl(0, 0%, 13%);
    line-height: 1.5;
}

h1 {
    font-family: "EgyptianHeadline", serif;
    font-weight: normal;
}

.h2 {
    font-size: 1.3rem;
    font-weight: bold;
}

section {
    h1 {
        font-size: 2rem;
        line-height: 1.2;
    }

    article,
    section {
        h1 {
            @extend .h2;
        }
    }
}

h1, p {
    // Unset
    margin-top: 0;
}

h1,
p,
.l-Grid,
.trailing-margin {
    margin-bottom: $trailing-margin-height;
}

.sans-serif {
    font-family: "AgateSans", sans-serif;
}

.cta-link {
    @extend .sans-serif;
    // TODO: Add bold sans-serif
    // font-weight: bold;
}

.dotted-top {
    border-top: 1px dotted $blue;
}

.dotted-top--white {
    border-top-color: white;
}

.h3 {
    @extend .dotted-top;
}

%white-text {
    &,
    a {
        color: white;
    }
}

.island {
    padding: $gutter-width;
}

.blue-widget {
    @extend %white-text;
    background-color: $blue;
}

.grey-widget {
    @extend %white-text;
    background-color: $grey;
}

h1,
p,
.l-Grid {
    &:last-child {
        margin-bottom: 0;
    }
}

iframe,
img {
    max-width: 100%;
}

.header {
    @extend .grey-widget;
    border-top: 4px solid $blue;
}

.header__inner {
    @extend .island;
    @include inset();

    @include breakpoint($desktop) {
        padding: 2rem;
    }
}

nav {
    @extend .dotted-top;
    text-transform: lowercase;
    font-size: 18px;

    & > ul {
        // Unset
        padding-left: 0;
        // Unset
        margin-top: 0;
        // Unset
        margin-left: 0;
        // Unset
        margin-bottom: 0;
        // Unset
        list-style: none;

        & > li > a {
            display: block;
            text-decoration: none;
            @include breakpoint($desktop) {
                padding-top: 1px;
            }

            &:hover {
                text-decoration: underline;
            }

            &.active {
                border-top: 2px solid $blue;
                @include breakpoint($desktop) {
                    margin-top: -1px;
                    // Unset
                    padding-top: 0;
                }
            }
        }
    }
}

.video {
    position: relative;
}

@mixin fix-aspect-ratio($width, $height, $startingWidth: 100%) {
    // To get this working, position the child element
    // to 'absolute' in the top left corner
    $height: ($height / $width) * $startingWidth;
    width: $startingWidth;
    padding-bottom: $height;
    position: relative;
    overflow: hidden;
}

.video__placeholder {
    // Temp
    @include fix-aspect-ratio(500px, 281px);
}

.video__iframe {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
}

@include grid(default);

@include breakpoint($tablet) {
    @include grid(tablet);
}

@include breakpoint($desktop) {
    @include grid(desktop);
}

$x: 650px;

.main-image-container {
    @extend .trailing-margin;

    @include breakpoint($x) {
        position: relative;
        padding-bottom: $trailing-margin-height;
    }
}

.main-image {
    // TODO: Polyfill for FF, IE11, Safari
    object-fit: cover;
    height: 50vmin;
    // Reset â€“ by default the aspect ratio is maintained
    width: 100%;

    @include breakpoint($desktop) {
        // Reset
        height: 60vmin;
    }
}

.main-image-overlay {
    @include breakpoint($x) {
        position: absolute;
        bottom: 0;
        width: 100%;
    }
}

.main-image-overlay-inner {
    @include breakpoint($x) {
        // Geeky: line up with gutters
        width: calc(50% - 0.5rem);
    }

    h1 {
        // TODO: Inherit minimum font size
        @include font-size(4, 2rem, 3.25rem);
    }
}
