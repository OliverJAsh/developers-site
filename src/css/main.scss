// TODO:
$gutter-width: 1.25rem;
$trailing-margin-height: 1.5rem;

@import "vars/colors";
@import "vars/breakpoints";

@import "mixins/breakpoint";
@import "mixins/grid";
@import "mixins/unset";
@import "mixins/other";

// Normalize/reset
@import "typography";

// Foundations
@import "grid";
@import "headings";
@import "webfonts";

@import "components/main-image";


* {
    // http://caniuse.com/#feat=css3-boxsizing
    box-sizing: border-box;
}

// "Objects"

.base-list {
    list-style: none;
    padding-left: 0;
}

.trailing-margin {
    margin-bottom: $trailing-margin-height;

    &:last-child {
        margin-bottom: 0;
    }
}

// HTML helpers

.hidden {
    display: none;
}

.inset {
    @include inset();
}

// Base

body {
    // Unset
    margin: 0;
}

.dotted-top {
    border-top: 1px dotted $blue;
    padding-top: $trailing-margin-height / 4;
}

.dotted-top--white {
    border-top-color: white;
}

.sans-serif {
    font-family: "AgateSans", sans-serif;
}

.cta-link {
    @extend .sans-serif;
    // TODO: Add bold sans-serif
    // font-weight: bold;
}

%white-text {
    &,
    a {
        color: white;
    }
}

.island {
    padding: ($trailing-margin-height / 2) $gutter-width;
}

.blue-widget {
    @extend %white-text;
    background-color: $blue;
}

.grey-widget {
    @extend %white-text;
    background-color: $grey;
}

iframe,
img {
    max-width: 100%;
}

.header {
    @extend .grey-widget;
    border-top: 4px solid $blue;
}

.header__inner {
    @extend .island;
    @include inset();

    @include breakpoint($desktop) {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
}

.main-nav {
    @extend .dotted-top;
    padding-top: 0;
    text-transform: lowercase;
    font-size: 1.2rem;

    & > ul {
        @extend .base-list;

        & > li > a {
            display: block;
            text-decoration: none;
            // Account for active border
            padding-top: 2px;

            @include breakpoint($desktop) {
                // Account for active border
                padding-top: 1px;
            }

            &:hover {
                text-decoration: underline;
            }

            &.active {
                border-top: 2px solid $blue;
                // Account for active border
                margin-top: -2px;

                @include breakpoint($desktop) {
                    // Account for active border
                    margin-top: -1px;
                    // Unset
                    padding-top: 0;
                }
            }
        }
    }
}

.video {
    position: relative;
}

.video__placeholder {
    // Temp
    @include fix-aspect-ratio(500px, 281px);
}

.video__iframe {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
}

// Object
.page-banner {
    @include font-size(2, 1.2rem, 1.5rem);

    .h1 {
        font-size: 2.25em;
        line-height: 1;
    }
}

// TODO:
.foo {
    $x: 50;
    $y: hundred-percent-from(2rem, 4);
    // max-width: percent-of($y, $x);

    @include breakpoint($desktop) {
        @include font-size(3, 2rem, 2.25rem);
        @include width($x,
            percent-of($y, $x),
            percent-of(hundred-percent-from(2.25rem, 4), $x))
    }
}

.page-intro {
    @extend .page-banner;
    @extend .header__inner;
    // Hack: make this look like it's part of the header
    // Could this be done better?
}

.bubble {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    color: hsl(0, 100%, 100%);
    background-color: #ccc;
    // Take into account font size, line height, to calculate vertical padding
    // TODO: Use variables
    // (((16*3.5)-(16*1.5))/2)/16
    padding-top: 1rem;
    padding-bottom: 1rem;
    text-align: center;
}

// Component?
.footer {
    font-size: 0.875rem;
    color: hsl(0, 0%, 50%);
}

.developer-blog-section {
    article {
        h3 {
            @extend .alt-h3;
        }

        time {
            @extend .trailing-margin;
            display: block;
            color: hsl(0, 0%, 50%);
        }
    }
}

.u-normal-weight-text {
    font-weight: 400;
}

.media {
    @extend .trailing-margin;
    display: flex;
}

.media__img {
    flex-shrink: 0;
    margin-right: $gutter-width;
}

.media__body {}

/*h1*/.title {
    // The `h1` `line-height` effects the height, but as we are displaying an
    // image, we let this control the dimensions.
    // Alternatively, we could set `img` `display: block`, but this effects
    // the click area of the hyperlink which is not what we want.
    line-height: 0;
}

// TODO: Is this a sensible default?
img {
    vertical-align: middle;
}

// TODO: BEMify?
.header-row {
    @extend .l-grid;
    @extend .l-tablet-grid;
    @include breakpoint($tablet) {
        align-items: center;
    }
}


.header-column {
    @extend .l-grid-cell;
    @extend .l-tablet-grid-cell;

    @at-root .header-column--links-nav {
        @extend .header-column;
        @include unset(flex-grow);
        @include unset(flex-basis);
        display: flex;
    }
}

.links-nav {
    @at-root .links-nav__item {
        margin-left: 0.5rem;

        // TODO: Brittle? What's the best practice? Use a class instead?
        &:first-of-type {
            margin-left: 0;
        }
    }
}

.talk__image-container {
    position: relative;
    padding-bottom: $trailing-margin-height;
}

.talk__image-container__image {
    border: 1px solid $light-grey;
}

.talk__image-container__author-gravatar {
    // TODO: Vendor prefix
    border-radius: 100%;
    // Positioned relative to `.talk__image-container`
    position: absolute;
    bottom: 0;
    right: -$gutter-width/2;
}
