// TODO:
@import "headings";
@import "webfonts";
$gutter-width: 1.25rem;
$trailing-margin-height: 1.2rem;
$tablet: 590px;
$desktop: 900px;
@import "grid";

@import "mixins/breakpoint";
@import "mixins/unset";

$grey: hsl(0,0%,28%);
$blue: hsl(188,89%,44%);

@function hundred-percent-from($value, $percent) {
    @return $value / ($percent / 100);
}

@function percent-of($value, $percent) {
    @return $value * ($percent / 100);
}

@mixin vw-range($property, $percent, $min, $max) {
    // Min
    #{$property}: $min;

    @include breakpoint($min/$percent * 100) {
        #{$property}: #{$percent}vw;
    }

    @include breakpoint($max/$percent * 100) {
        #{$property}: $max;
    }
}

@mixin font-size($p, $min, $max) {
    @include vw-range(font-size, $p, $min, $max);
}

@mixin width($p, $min, $max) {
    @include vw-range(width, $p, $min, $max);
}

@mixin inset() {
    @include breakpoint($desktop) {
        min-width: $desktop;
        width: 95vw;
        max-width: 1110px;
        margin-left: auto;
        margin-right: auto;
    }
}

// TODO: Do we want to do this for everything?
* {
    box-sizing: border-box;
}

.base-list {
    list-style: none;
    padding-left: 0;
}

.hidden {
    display: none
}

.inset {
    @include inset();
}

body {
    // Unset
    margin: 0;
    font-family: "EgyptianText", serif;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    color: hsl(0, 0%, 13%);
    line-height: 1.5;
}

// TODO: Mimic NGW
a {
    color: darken($blue, 18%);

    &:hover {
        text-decoration: underline;
    }
}

.dotted-top {
    border-top: 1px dotted $blue;
}

.dotted-top--white {
    border-top-color: white;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul {
    // Unset
    margin-top: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
.trailing-margin {
    margin-bottom: $trailing-margin-height;

    &:last-child {
        margin-bottom: 0;
    }
}

.sans-serif {
    font-family: "AgateSans", sans-serif;
}

.cta-link {
    @extend .sans-serif;
    // TODO: Add bold sans-serif
    // font-weight: bold;
}

%white-text {
    &,
    a {
        color: white;
    }
}

.island {
    padding: $gutter-width;
}

.blue-widget {
    @extend %white-text;
    background-color: $blue;
}

.grey-widget {
    @extend %white-text;
    background-color: $grey;
}

iframe,
img {
    max-width: 100%;
}

.header {
    @extend .grey-widget;
    border-top: 4px solid $blue;
}

.header__inner {
    @extend .island;
    @include inset();

    @include breakpoint($desktop) {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
}

.main-nav {
    @extend .dotted-top;
    text-transform: lowercase;
    font-size: 18px;

    & > ul {
        @extend .base-list;

        & > li > a {
            display: block;
            text-decoration: none;
            // Account for active border
            padding-top: 2px;

            @include breakpoint($desktop) {
                // Account for active border
                padding-top: 1px;
            }

            &:hover {
                text-decoration: underline;
            }

            &.active {
                border-top: 2px solid $blue;
                // Account for active border
                margin-top: -2px;

                @include breakpoint($desktop) {
                    // Account for active border
                    margin-top: -1px;
                    // Unset
                    padding-top: 0;
                }
            }
        }
    }
}

.video {
    position: relative;
}

@mixin fix-aspect-ratio($width, $height, $startingWidth: 100%) {
    // To get this working, position the child element
    // to 'absolute' in the top left corner
    $height: ($height / $width) * $startingWidth;
    width: $startingWidth;
    padding-bottom: $height;
    position: relative;
    overflow: hidden;
}

.video__placeholder {
    // Temp
    @include fix-aspect-ratio(500px, 281px);
}

.video__iframe {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
}

$x: 650px;

.main-image-container {
    @extend .trailing-margin;

    @include breakpoint($x) {
        position: relative;
        padding-bottom: $trailing-margin-height;
    }
}

.main-image {
    // TODO: Polyfill for FF, IE11, Safari
    object-fit: cover;
    height: 50vmin;
    min-height: 40vmax;
    @include breakpoint($desktop) {
        min-height: 30vmax;
    }
    // Reset â€“ by default the aspect ratio is maintained
    width: 100%;

    @include breakpoint($desktop) {
        // Reset
        height: 60vmin;
    }
}

.main-image-overlay {
    @include breakpoint($x) {
        position: absolute;
        bottom: 0;
        width: 100%;
    }
}

.main-image-overlay-inner {
    // TODO: Inherit minimum font size
    $min-heading-font-size: 2.25rem;
    $max-heading-font-size: 3.25rem;
    $heading-vw-width: 4;

    $vw-width: 54;
    $min-width: percent-of(hundred-percent-from($min-heading-font-size, $heading-vw-width), $vw-width);
    $max-width: percent-of(hundred-percent-from($max-heading-font-size, $heading-vw-width), $vw-width);
    @include breakpoint($x) {
        @include width($vw-width, $min-width, $max-width);
    }

    h2 {
        @include font-size($heading-vw-width, $min-heading-font-size, $max-heading-font-size);
    }

    p {
        @include font-size(2, 1rem, 1.3rem);
    }
}

.foo {
    $x: 50;
    $y: hundred-percent-from(2rem, 4);
    // max-width: percent-of($y, $x);

    @include breakpoint($desktop) {
        @include font-size(3, 2rem, 2.25rem);
        @include width($x,
            percent-of($y, $x),
            percent-of(hundred-percent-from(2.25rem, 4), $x))
    }
}

.large-text {
    font-size: 1.5rem;
}

.page-intro {
    @extend .header__inner;
    @extend .large-text;
    // Hack: make this look like it's part of the header
    // Could this be done better?
    padding-top: 0;
}

.bubble {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 50%;
    color: hsl(0, 100%, 100%);
    background-color: #ccc;
    // Take into account font size, line height, to calculate vertical padding
    // TODO: Use variables
    // (((16*3.5)-(16*1.5))/2)/16
    padding-top: 1rem;
    padding-bottom: 1rem;
    text-align: center;
}

// Component?
.footer {
    font-size: 0.875rem;
    color: hsl(0, 0%, 50%);
}

.developer-blog-section {
    article {
        h3 {
            margin-bottom: 0;
        }

        time {
            @extend .trailing-margin;
            display: block;
            color: hsl(0, 0%, 50%);
        }
    }
}

.media {
    @extend .trailing-margin;
    display: flex;
}

.media__img {
    flex-shrink: 0;
    margin-right: $gutter-width;
}

/*h1*/.title {
    // The `h1` `line-height` effects the height, but as we are displaying an
    // image, we let this control the dimensions.
    // Alternatively, we could set `img` `display: block`, but this effects
    // the click area of the hyperlink which is not what we want.
    line-height: 0;
}

// TODO: Is this a sensible default?
img {
    vertical-align: middle;
}

.header-row {
    @extend .l-grid;
    @extend .l-tablet-grid;
    @include breakpoint($tablet) {
        align-items: center;
    }
}


.header-column {
    @extend .l-grid-cell;
    @extend .l-tablet-grid-cell;

    @at-root .header-column--links-nav {
        @extend .header-column;
        @include unset(flex-grow);
        @include unset(flex-basis);
        display: flex;
    }
}

.links-nav {
    @at-root .links-nav__item {
        margin-left: 0.5rem;

        // TODO: Brittle? What's the best practice? Use a class instead?
        &:first-of-type {
            margin-left: 0;
        }
    }
}
